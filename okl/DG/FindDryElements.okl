kernel void FindDryElements(const int Nelem,
                            const dfloat * restrict  Q,
                            int  * restrict  isPartlyDry)
{



    for(int ie = 0; ie < Nelem; ie++; outer0)
    {

        shared dfloat s_Minh[ngl][ngl];




        for (int i=0; i<ngl; ++i; inner1)
        {
            for (int j=0; j<ngl; ++j; inner0)
            {
                const int Fid = ie*ngl2*Neq   +j*ngl+i;

                const dfloat r_h = Q[Fid];
                if (r_h>PosPresTOL)
                {
                    s_Minh[i][j] =r_h;
                }
                else
                {
                    s_Minh[i][j] =zero;
                }

                isPartlyDry[ie] = 0;

            }
        }

        barrier(localMemFence);



        for (int i=0; i<ngl; ++i; inner1)
        {
            for (int j=0; j<ngl; ++j; inner0)
            {
                if (i==0)
                {
                    if (j==0)
                    {
                        isPartlyDry[ie] = 1;
                        occaUnroll(ngl)
                        for (int k=0; k<ngl; ++k)
                        {
                            occaUnroll(ngl)
                            for (int l=0; l<ngl; ++l)
                            {
                                if (s_Minh[l][k] == zero)
                                {
                                    isPartlyDry[ie] = 1;
                                }
                            }
                        }

                    }
                }




            }

        }



    }\\elem



}//kernel


