kernel void VolumeKernelFluxDiff(int Nelem,dfloat * Jac,dfloat * Y_xi,dfloat * Y_eta,dfloat * X_xi,
                                 dfloat * X_eta,dfloat * Q,dfloat * D,dfloat * Bx,dfloat * By,dfloat * Qt)
{
    for(int ie = 0; ie < Nelem; ie++; outer0)
    {
        for (int j=0; j<ngl; ++j; inner1)
        {
            for (int i=0; i<ngl; ++i; inner0)
            {
				int ij = ie*ngl2*Neq   +j*ngl+i;
				int xij = ie*ngl2   +j*ngl+i;
                dfloat FluxDeriv1=zero,FluxDeriv2=zero,FluxDeriv3=zero;
                for (int l=0; l<ngl; ++l)
                {
					int lj = ie*ngl2*Neq   +j*ngl+l;
					int xlj= ie*ngl2   +j*ngl+l;
                    dfloat h_avg_xi = half*(Q[ij]+Q[lj]) ;
                    dfloat h2_avg_xi = half*(Q[ij]*Q[ij]+Q[lj]*Q[lj]) ;
                    dfloat hu_avg_xi = half* (Q[ij+ngl2]+Q[lj+ngl2]) ;
                    dfloat hv_avg_xi = half* (Q[ij+ngl2+ngl2]+Q[lj+ngl2+ngl2]) ;
                    dfloat u_avg_xi = half* (Q[ij+ngl2]/Q[ij]+Q[lj+ngl2]/Q[lj]) ;
                    dfloat v_avg_xi = half* (Q[ij+ngl2+ngl2]/Q[ij]+Q[lj+ngl2+ngl2]/Q[lj]) ;
                    dfloat Yeta_avg = half*(Y_eta[xij]+Y_eta[xlj]) ;
                    dfloat Xeta_avg = half*(X_eta[xij]+X_eta[xlj]) ;
                    dfloat F1vol = Yeta_avg * hu_avg_xi - Xeta_avg * hv_avg_xi;
                    dfloat F2vol = Yeta_avg *(hu_avg_xi * u_avg_xi   + g_const * h_avg_xi*h_avg_xi
										    - half*g_const*h2_avg_xi) - Xeta_avg*hv_avg_xi * u_avg_xi;
                    dfloat F3vol = Yeta_avg *(hu_avg_xi * v_avg_xi) - Xeta_avg*(hv_avg_xi*v_avg_xi
										    + g_const * h_avg_xi*h_avg_xi - half*g_const * h2_avg_xi);
					
					int il = ie*ngl2*Neq   +l*ngl+i;
					int xil = ie*ngl2   +l*ngl+i;

                    dfloat h_avg_eta = half*(Q[ij]+Q[il]) ;
                    dfloat h2_avg_eta = half*(Q[ij]*Q[ij]+Q[il]*Q[il]) ;
                    dfloat hu_avg_eta = half* (Q[ij+ngl2]+Q[il+ngl2]);
                    dfloat hv_avg_eta = half* (Q[ij+ngl2+ngl2]+Q[il+ngl2+ngl2]);
                    dfloat u_avg_eta = half* (Q[ij+ngl2]/Q[ij]+Q[il+ngl2]/Q[il]) ;
                    dfloat v_avg_eta = half* (Q[ij+ngl2+ngl2]/Q[ij]+Q[il+ngl2+ngl2]/Q[il]) ;
                    dfloat Yxi_avg = half*(Y_xi[xij]+Y_xi[xil]) ;
                    dfloat Xxi_avg = half*(X_xi[xij]+X_xi[xil]) ;
                    dfloat G1vol =-Yxi_avg * hu_avg_eta       + Xxi_avg*hv_avg_eta;
                    dfloat G2vol =-Yxi_avg * (hu_avg_eta * u_avg_eta   + g_const * h_avg_eta*h_avg_eta
										      - half*g_const*h2_avg_eta) + Xxi_avg* hv_avg_eta * u_avg_eta;
                    dfloat G3vol =-Yxi_avg *(hu_avg_eta * v_avg_eta) + Xxi_avg*(hv_avg_eta*v_avg_eta 
										      + g_const * h_avg_eta*h_avg_eta - half*g_const * h2_avg_eta);

                    FluxDeriv1+= D[i*ngl+l] * F1vol + D[j*ngl+l] * G1vol ;
                    FluxDeriv2+=D[i*ngl+l] * F2vol +D[j*ngl+l] * G2vol;
                    FluxDeriv3+=D[i*ngl+l] * F3vol +D[j*ngl+l] * G3vol ;
                }
                Qt[ij]              = -  Jac[xij] *FluxDeriv1;
                Qt[ij+ngl2]         = -  Jac[xij] *FluxDeriv2 - g_const *Q[ij]*Bx[xij] ;
                Qt[ij+ngl2+ngl2]    = -  Jac[xij] *FluxDeriv3 - g_const *Q[ij]*By[xij];
            }
        }
    }
}
