

kernel void addS(const int Nelem,const dfloat * Bx,const dfloat * By,const dfloat * B,const dfloat * x,const dfloat * y,const dfloat t,dfloat * gRK)
{


    for(int ie = 0; ie < Nelem; ie++; outer0)
    {


        shared dfloat s_Bx[ngl2];
        shared dfloat s_By[ngl2];
        shared dfloat s_B[ngl2];
        shared dfloat s_x[ngl2];
        shared dfloat s_y[ngl2];

            for (int i=0; i<ngl; ++i;inner1){
                for (int j=0; j<ngl;++j;inner0){
                        int id=j*ngl+i;

                        int xid = ie*ngl2   +j*ngl+i;



                        s_x[id] = x[xid];
                        s_y[id] = y[xid];

                        s_Bx[id]= Bx[xid];
                        s_By[id]= By[xid];
                        s_B[id]= B[xid];


                    }
                }

            barrier(localMemFence);
        // calc Source Term and update gRK

          for(int j=0;j<ngl;++j;inner1){
            for(int i=0;i<ngl;++i;inner0){
                int id = ie*ngl2*Neq   +j*ngl+i;
                int idLoc=j*ngl+i;


                dfloat sinY=sin(2.0*PI*s_y[idLoc]);
                dfloat sinX=sin(2.0*PI*s_x[idLoc]);
                dfloat cosY=cos(2.0*PI*s_y[idLoc]);
                dfloat cosX=cos(2.0*PI*s_x[idLoc]);

                dfloat H= 8.0+cosX*sinY*cos(t);
                dfloat H_t=-cosX*sinY*sin(t);
                dfloat H_x=-2.0*PI*sinX*sinY*cos(t);
                dfloat H_y=2.0*PI*cosX*cosY*cos(t);



                dfloat u=0.5;
                dfloat v=1.5;

                dfloat u_t=0.0;
                dfloat u_x=0.0;
                dfloat u_y=0.0;
                dfloat v_t=0.0;
                dfloat v_x=0.0;
                dfloat v_y=0.0;


                gRK[id]             += H_t+u*(H_x-s_Bx[idLoc]) + v*(H_y-s_By[idLoc]);
                gRK[id+ngl2]        += u*H_t+u*u*(H_x-s_Bx[idLoc])+u*v*(H_y-s_By[idLoc])+g_const*H_x*(H-s_B[idLoc]);
                gRK[id+ngl2+ngl2]   +=  v*H_t+u*v*(H_x-s_Bx[idLoc])+v*v*(H_y-s_By[idLoc])+g_const*H_y*(H-s_B[idLoc]);
            }
          }








    }



}
