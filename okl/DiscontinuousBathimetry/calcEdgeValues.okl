kernel void calcEdgeValues(const int Nfaces,
                           const dfloat * restrict  qL,
                           const dfloat * restrict  qR,
                           const dfloat * restrict  bL,
                           const dfloat * restrict  bR,
                           dfloat * restrict  hAvg,
                           dfloat * restrict  bJump)
{
    for (int ifa_base=0; ifa_base<Nfaces; ifa_base+=Nedgepad; outer0)
    {



        for (int ifa_inner = 0; ifa_inner < Nedgepad; ifa_inner++; inner1)
        {
            for(int i=0; i<ngl; i++; inner0)
            {

                const int ifa = ifa_base + ifa_inner;

                if (ifa<Nfaces)
                {

                    const int edgeID=ifa*ngl*Neq + i;   //for edge wise solution
                    const int edgeIDX=ifa*ngl + i;      //for edge wise spatial values (BOTTOM)


                    hAvg[edgeIDX] = half* (qL[edgeID] + qR[edgeID]);
                    bJump[edgeIDX] =  (bR[edgeIDX]-bL[edgeIDX]);


                }

            }//inner0 loop




        }//outer0 loop


    }//end kernel
